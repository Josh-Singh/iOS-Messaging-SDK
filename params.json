{
  "name": "LivePerson - iOS messaging SDK",
  "tagline": "iOS SDK LiveChatSDK LivePerson",
  "body": "# LPMessagingSDK-iOS\r\nThis read.me include the quick start guide for Swift project. \r\nFind the full documentation, including Objective-C guide in the integration guide. \r\n\r\n\r\n### Configure project settings to connect LiveEngage SDK\r\n* Copy the files into the project, including the bundle file\r\nIn project settings, navigate to the General tab, and add all Framework files to the Embedded Binaries section.\r\n\r\n\r\n* In project settings, navigate to the Build Phases tab, and add with the ‘+’ button “New      Run Script Phase”. Add the following script in order to  loop through the frameworks embedded in the application and remove unused architectures.\r\n\r\n```\r\nAPP_PATH=\"${TARGET_BUILD_DIR}/${WRAPPER_NAME}\"\r\n\r\n# This script loops through the frameworks embedded in the application and\r\n# removes unused architectures.\r\nfind \"$APP_PATH\" -name '*.framework' -type d | while read -r FRAMEWORK\r\ndo\r\n    FRAMEWORK_EXECUTABLE_NAME=$(defaults read \"$FRAMEWORK/Info.plist\" CFBundleExecutable)\r\n    FRAMEWORK_EXECUTABLE_PATH=\"$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME\"\r\n    echo \"Executable is $FRAMEWORK_EXECUTABLE_PATH\"\r\n\r\n    EXTRACTED_ARCHS=()\r\n\r\n    for ARCH in $ARCHS\r\n    do\r\n        echo \"Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME\"\r\n        lipo -extract \"$ARCH\" \"$FRAMEWORK_EXECUTABLE_PATH\" -o \"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\"\r\n        EXTRACTED_ARCHS+=(\"$FRAMEWORK_EXECUTABLE_PATH-$ARCH\")\r\n    done\r\n\r\n    echo \"Merging extracted architectures: ${ARCHS}\"\r\n    lipo -o \"$FRAMEWORK_EXECUTABLE_PATH-merged\" -create \"${EXTRACTED_ARCHS[@]}\"\r\n    rm \"${EXTRACTED_ARCHS[@]}\"\r\n\r\n    echo \"Replacing original executable with thinned version\"\r\n    rm \"$FRAMEWORK_EXECUTABLE_PATH\"\r\n    mv \"$FRAMEWORK_EXECUTABLE_PATH-merged\" \"$FRAMEWORK_EXECUTABLE_PATH\"\r\n\r\ndone\r\n```\r\n\r\n### Initialization\r\nNow that you have the configuration file for your project, you're ready to begin implementing. \r\nTo initialize the SDK, you must have a LivePerson account number. Consult your LivePerson account team to obtain the number.\r\n\r\n* Inside AppDelegate, add:\r\n```\r\nimport LPMessagingSDK\r\n```\r\n\r\n* Inside AppDelegate, under didFinishLaunchingWithOptions, add the following code:\r\n```\r\ndo {\r\ntry LPMessagingSDK.instance.initialize()\r\n} catch {\r\n// SDK has an initialization error...\r\nreturn\r\n}\r\n```\r\n* Setup and call the conversation view\r\nYou’ll need to provide your account number and a container view controller\r\n```\r\nlet conversationQuery = LPMessagingSDK.instance.getConversationBrandQuery(accountNumber)\r\nLPMessagingSDK.instance.showConversation(conversationQuery, authenticationCode: accountNumber, containerViewController: self)\r\n```\r\n* In order to remove the conversation view when your container is deallocated, run the following code:\r\n```\r\nlet conversationQuery = LPMessagingSDK.instance.getConversationBrandQuery(accountNumber)\r\nLPMessagingSDK.instance.removeConversation(conversationQuery)\r\n```\r\n\r\n* In general tab, make sure that the framework files are under ‘Embedded Libraries’.\r\n* In build settings make sure “Embedded content contains Swift code” is set to “Yes”\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}